{"ast":null,"code":"var _jsxFileName = \"/Users/phicosdev/fajar/weather/src/components/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const getSuggestions = value => {\n    return axios.get(`https://api.ninja/cities?q=${value}`).then(response => response.data).catch(error => console.log(error));\n  };\n  const renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: suggestion.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 46\n  }, this);\n  const onSuggestionSelected = (event, _ref) => {\n    let {\n      suggestion\n    } = _ref;\n    console.log(suggestion);\n  };\n  const inputProps = {\n    placeholder: \"Enter city name\",\n    value,\n    onChange: (event, _ref2) => {\n      let {\n        newValue\n      } = _ref2;\n      setValue(newValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Autosuggest, {\n    suggestions: suggestions,\n    onSuggestionsFetchRequested: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      getSuggestions(value).then(suggestions => setSuggestions(suggestions));\n    },\n    onSuggestionsClearRequested: () => setSuggestions([]),\n    getSuggestionValue: suggestion => suggestion.name,\n    renderSuggestion: renderSuggestion,\n    inputProps: inputProps,\n    onSuggestionSelected: onSuggestionSelected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBar, \"ckwyUyYkDHeO5Bvhh+ufzAXDSF4=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","Autosuggest","axios","jsxDEV","_jsxDEV","SearchBar","_s","value","setValue","suggestions","setSuggestions","getSuggestions","get","then","response","data","catch","error","console","log","renderSuggestion","suggestion","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onSuggestionSelected","event","_ref","inputProps","placeholder","onChange","_ref2","newValue","onSuggestionsFetchRequested","_ref3","onSuggestionsClearRequested","getSuggestionValue","_c","$RefreshReg$"],"sources":["/Users/phicosdev/fajar/weather/src/components/SearchBar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport axios from \"axios\";\n\nconst SearchBar = () => {\n    const [value, setValue] = useState(\"\");\n    const [suggestions, setSuggestions] = useState([]);\n\n    const getSuggestions = (value) => {\n        return axios\n            .get(`https://api.ninja/cities?q=${value}`)\n            .then((response) => response.data)\n            .catch((error) => console.log(error));\n    };\n\n    const renderSuggestion = (suggestion) => <div>{suggestion.name}</div>;\n\n    const onSuggestionSelected = (event, { suggestion }) => {\n        console.log(suggestion);\n    };\n\n    const inputProps = {\n        placeholder: \"Enter city name\",\n        value,\n        onChange: (event, { newValue }) => {\n            setValue(newValue);\n        }\n    };\n\n    return (\n        <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={({ value }) => {\n                getSuggestions(value).then((suggestions) =>\n                    setSuggestions(suggestions)\n                );\n            }}\n            onSuggestionsClearRequested={() => setSuggestions([])}\n            getSuggestionValue={(suggestion) => suggestion.name}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n            onSuggestionSelected={onSuggestionSelected}\n        />\n    );\n};\n\nexport default SearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,cAAc,GAAIJ,KAAK,IAAK;IAC9B,OAAOL,KAAK,CACPU,GAAG,CAAE,8BAA6BL,KAAM,EAAC,CAAC,CAC1CM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMG,gBAAgB,GAAIC,UAAU,iBAAKjB,OAAA;IAAAkB,QAAA,EAAMD,UAAU,CAACE;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;EAErE,MAAMC,oBAAoB,GAAGA,CAACC,KAAK,EAAAC,IAAA,KAAqB;IAAA,IAAnB;MAAET;IAAW,CAAC,GAAAS,IAAA;IAC/CZ,OAAO,CAACC,GAAG,CAACE,UAAU,CAAC;EAC3B,CAAC;EAED,MAAMU,UAAU,GAAG;IACfC,WAAW,EAAE,iBAAiB;IAC9BzB,KAAK;IACL0B,QAAQ,EAAEA,CAACJ,KAAK,EAAAK,KAAA,KAAmB;MAAA,IAAjB;QAAEC;MAAS,CAAC,GAAAD,KAAA;MAC1B1B,QAAQ,CAAC2B,QAAQ,CAAC;IACtB;EACJ,CAAC;EAED,oBACI/B,OAAA,CAACH,WAAW;IACRQ,WAAW,EAAEA,WAAY;IACzB2B,2BAA2B,EAAEC,KAAA,IAAe;MAAA,IAAd;QAAE9B;MAAM,CAAC,GAAA8B,KAAA;MACnC1B,cAAc,CAACJ,KAAK,CAAC,CAACM,IAAI,CAAEJ,WAAW,IACnCC,cAAc,CAACD,WAAW,CAAC,CAC9B;IACL,CAAE;IACF6B,2BAA2B,EAAEA,CAAA,KAAM5B,cAAc,CAAC,EAAE,CAAE;IACtD6B,kBAAkB,EAAGlB,UAAU,IAAKA,UAAU,CAACE,IAAK;IACpDH,gBAAgB,EAAEA,gBAAiB;IACnCW,UAAU,EAAEA,UAAW;IACvBH,oBAAoB,EAAEA;EAAqB;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC7C;AAEV,CAAC;AAACrB,EAAA,CAxCID,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}