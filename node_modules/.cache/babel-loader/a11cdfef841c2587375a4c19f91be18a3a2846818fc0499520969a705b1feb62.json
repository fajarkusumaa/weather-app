{"ast":null,"code":"var _jsxFileName = \"/Users/phicosdev/fajar/weather/src/components/BigCities.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BigCities() {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  useEffect(() => {\n    const cities = [\"Tokyo\", \"New York\", \"Shanghai\", \"London\", \"Paris\", \"Moscow\", \"Jakarta\"];\n    const unit = \"metric\"; // or \"imperial\" for Fahrenheit\n    const urls = cities.map(city => `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=281b1bf64dd901bf03d0cb8dbb2f18dd&units=${unit}`);\n    Promise.all(urls.map(url => axios.get(url))).then(responses => {\n      const data = responses.map(response => response.data);\n      setWeatherData(data);\n    }).catch(err => {\n      if (err.response.status === 404) {}\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-row justify-content-around px-4\",\n    children: weatherData.map((cityData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [Math.round(cityData.main.temp), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cityData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(BigCities, \"/WBsAESNl5X9UOGQ8x5/AmmeTCo=\");\n_c = BigCities;\nexport default BigCities;\nvar _c;\n$RefreshReg$(_c, \"BigCities\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BigCities","_s","weatherData","setWeatherData","cities","unit","urls","map","city","Promise","all","url","get","then","responses","data","response","catch","err","status","className","children","cityData","index","Math","round","main","temp","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/Users/phicosdev/fajar/weather/src/components/BigCities.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction BigCities() {\n    const [weatherData, setWeatherData] = useState([]);\n\n    useEffect(() => {\n        const cities = [\n            \"Tokyo\",\n            \"New York\",\n            \"Shanghai\",\n            \"London\",\n            \"Paris\",\n            \"Moscow\",\n            \"Jakarta\"\n        ];\n        const unit = \"metric\"; // or \"imperial\" for Fahrenheit\n        const urls = cities.map(\n            (city) =>\n                `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=281b1bf64dd901bf03d0cb8dbb2f18dd&units=${unit}`\n        );\n\n        Promise.all(urls.map((url) => axios.get(url)))\n            .then((responses) => {\n                const data = responses.map((response) => response.data);\n                setWeatherData(data);\n            })\n            .catch((err) => {\n                if (err.response.status === 404) {\n                }\n            });\n    }, []);\n\n    return (\n        <div className=\"d-flex flex-row justify-content-around px-4\">\n            {weatherData.map((cityData, index) => (\n                <div className=\"text-start\" key={index}>\n                    <h1>{Math.round(cityData.main.temp)}&deg;C</h1>\n                    <p>{cityData.name}</p>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default BigCities;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZ,MAAMQ,MAAM,GAAG,CACX,OAAO,EACP,UAAU,EACV,UAAU,EACV,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,SAAS,CACZ;IACD,MAAMC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACvB,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAG,CAClBC,IAAI,IACA,qDAAoDA,IAAK,iDAAgDH,IAAK,EAAC,CACvH;IAEDI,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACC,GAAG,CAAEI,GAAG,IAAKd,KAAK,CAACe,GAAG,CAACD,GAAG,CAAC,CAAC,CAAC,CACzCE,IAAI,CAAEC,SAAS,IAAK;MACjB,MAAMC,IAAI,GAAGD,SAAS,CAACP,GAAG,CAAES,QAAQ,IAAKA,QAAQ,CAACD,IAAI,CAAC;MACvDZ,cAAc,CAACY,IAAI,CAAC;IACxB,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAK;MACZ,IAAIA,GAAG,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE,CACjC;IACJ,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIpB,OAAA;IAAKqB,SAAS,EAAC,6CAA6C;IAAAC,QAAA,EACvDnB,WAAW,CAACK,GAAG,CAAC,CAACe,QAAQ,EAAEC,KAAK,kBAC7BxB,OAAA;MAAKqB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBtB,OAAA;QAAAsB,QAAA,GAAKG,IAAI,CAACC,KAAK,CAACH,QAAQ,CAACI,IAAI,CAACC,IAAI,CAAC,EAAC,OAAM;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC/ChC,OAAA;QAAAsB,QAAA,EAAIC,QAAQ,CAACU;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAFOR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd;AAAC9B,EAAA,CAxCQD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AA0ClB,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}