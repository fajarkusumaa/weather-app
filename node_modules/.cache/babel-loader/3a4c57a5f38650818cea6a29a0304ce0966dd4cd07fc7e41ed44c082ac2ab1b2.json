{"ast":null,"code":"var _jsxFileName = \"/Users/phicosdev/fajar/weather/src/components/BigCities.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BigCities() {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  useEffect(() => {\n    const cities = [\"Tokyo\", \"New York\", \"Shanghai\", \"London\", \"Paris\", \"Los Angeles\", \"Moscow\", \"Jakarta\"];\n    const unit = \"metric\"; // or \"imperial\" for Fahrenheit\n    const urls = cities.map(city => `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=281b1bf64dd901bf03d0cb8dbb2f18dd&units=${unit}`);\n    Promise.all(urls.map(url => axios.get(url))).then(responses => {\n      const data = responses.map(response => response.data);\n      setWeatherData(data);\n      console.log(data);\n    }).catch(err => {\n      if (err.response.status === 404) {}\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-row justify-content-around px-4\",\n    children: weatherData.map((cityData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [Math.round(cityData.main.temp), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cityData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(BigCities, \"/WBsAESNl5X9UOGQ8x5/AmmeTCo=\");\n_c = BigCities;\nexport default BigCities;\nvar _c;\n$RefreshReg$(_c, \"BigCities\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BigCities","_s","weatherData","setWeatherData","cities","unit","urls","map","city","Promise","all","url","get","then","responses","data","response","console","log","catch","err","status","className","children","cityData","index","Math","round","main","temp","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/Users/phicosdev/fajar/weather/src/components/BigCities.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction BigCities() {\n    const [weatherData, setWeatherData] = useState([]);\n\n    useEffect(() => {\n        const cities = [\"Tokyo\", \"New York\", \"Shanghai\", \"London\", \"Paris\", \"Los Angeles\", \"Moscow\", \"Jakarta\"];\n        const unit = \"metric\"; // or \"imperial\" for Fahrenheit\n        const urls = cities.map(city => `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=281b1bf64dd901bf03d0cb8dbb2f18dd&units=${unit}`);\n\n        Promise.all(urls.map(url => axios.get(url)))\n            .then(responses => {\n                const data = responses.map(response => response.data);\n                setWeatherData(data);\n                console.log(data);\n\n            })\n            .catch(err => {\n                if (err.response.status === 404) {\n                }\n            });\n    }, []);\n\n\n    return (\n        <div className=\"d-flex flex-row justify-content-around px-4\">\n            {weatherData.map((cityData, index) => (\n                <div className=\"text-start\" key={index}>\n                    <h2>{Math.round(cityData.main.temp)}&deg;C</h2>\n                    <p>{cityData.name}</p>\n                </div>\n            ))}\n        </div>\n    );\n\n}\n\nexport default BigCities;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZ,MAAMQ,MAAM,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC;IACvG,MAAMC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACvB,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAG,CAACC,IAAI,IAAK,qDAAoDA,IAAK,iDAAgDH,IAAK,EAAC,CAAC;IAEjJI,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACC,GAAG,CAACI,GAAG,IAAId,KAAK,CAACe,GAAG,CAACD,GAAG,CAAC,CAAC,CAAC,CACvCE,IAAI,CAACC,SAAS,IAAI;MACf,MAAMC,IAAI,GAAGD,SAAS,CAACP,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACD,IAAI,CAAC;MACrDZ,cAAc,CAACY,IAAI,CAAC;MACpBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IAErB,CAAC,CAAC,CACDI,KAAK,CAACC,GAAG,IAAI;MACV,IAAIA,GAAG,CAACJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE,CACjC;IACJ,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAGN,oBACItB,OAAA;IAAKuB,SAAS,EAAC,6CAA6C;IAAAC,QAAA,EACvDrB,WAAW,CAACK,GAAG,CAAC,CAACiB,QAAQ,EAAEC,KAAK,kBAC7B1B,OAAA;MAAKuB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBxB,OAAA;QAAAwB,QAAA,GAAKG,IAAI,CAACC,KAAK,CAACH,QAAQ,CAACI,IAAI,CAACC,IAAI,CAAC,EAAC,OAAM;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC/ClC,OAAA;QAAAwB,QAAA,EAAIC,QAAQ,CAACU;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAFOR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAGd;AAAChC,EAAA,CAjCQD,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAmClB,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}