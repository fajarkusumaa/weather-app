{"ast":null,"code":"var _jsxFileName = \"/Users/phicosdev/fajar/weather/src/components/BigCities.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BigCities() {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  useEffect(() => {\n    const cities = [\"Tokyo\", \"New York\", \"Shanghai\", \"London\", \"Paris\", \"Los Angeles\", \"Moscow\"];\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${cities}&appid=281b1bf64dd901bf03d0cb8dbb2f18dd&units=${unit}`;\n    axios.get(url).then(res => {\n      setData({\n        ...data,\n        temp: res.data.main.temp,\n        mintemp: res.data.main.temp_min,\n        maxtemp: res.data.main.temp_max,\n        humidity: res.data.main.humidity,\n        timezone: res.data.timezone,\n        feels_like: res.data.main.feels_like,\n        wind: res.data.wind.speed,\n        city: res.data.name,\n        icons: res.data.weather[0].icon,\n        weatherView: res.data.weather[0].description\n      });\n      setError('');\n      getimgUrl(res.data.weather[0].description);\n    }).catch(err => {\n      if (err.response.status == 404) {\n        setError(\"Invalid City Name!\");\n      } else {\n        setError('');\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Array.isArray(weatherData) && weatherData.map(city => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: city.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current temperature: \", city.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weather description: \", city.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", city.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind speed: \", city.wind.speed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, city.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(BigCities, \"/WBsAESNl5X9UOGQ8x5/AmmeTCo=\");\n_c = BigCities;\nexport default BigCities;\nvar _c;\n$RefreshReg$(_c, \"BigCities\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BigCities","_s","weatherData","setWeatherData","cities","url","unit","axios","get","then","res","setData","data","temp","main","mintemp","temp_min","maxtemp","temp_max","humidity","timezone","feels_like","wind","speed","city","name","icons","weather","icon","weatherView","description","setError","getimgUrl","catch","err","response","status","children","Array","isArray","map","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/phicosdev/fajar/weather/src/components/BigCities.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction BigCities() {\n    const [weatherData, setWeatherData] = useState([]);\n\n    useEffect(() => {\n        const cities = [\"Tokyo\", \"New York\", \"Shanghai\", \"London\", \"Paris\", \"Los Angeles\", \"Moscow\"];\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${cities}&appid=281b1bf64dd901bf03d0cb8dbb2f18dd&units=${unit}`;\n        axios\n            .get(url)\n            .then(res => {\n                setData({\n                    ...data,\n                    temp: res.data.main.temp,\n                    mintemp: res.data.main.temp_min,\n                    maxtemp: res.data.main.temp_max,\n                    humidity: res.data.main.humidity,\n                    timezone: res.data.timezone,\n                    feels_like: res.data.main.feels_like,\n                    wind: res.data.wind.speed,\n                    city: res.data.name,\n                    icons: res.data.weather[0].icon,\n                    weatherView: res.data.weather[0].description\n                });\n                setError('');\n                getimgUrl(res.data.weather[0].description);\n            })\n\n            .catch(err => {\n                if (err.response.status == 404) {\n                    setError(\"Invalid City Name!\")\n                }\n                else {\n                    setError('')\n                }\n            });\n    }, []);\n\n    return (\n        <div>\n            {Array.isArray(weatherData) && weatherData.map(city => (\n                <div key={city.id}>\n                    <h2>{city.name}</h2>\n                    <p>Current temperature: {city.main.temp}Â°C</p>\n                    <p>Weather description: {city.weather[0].description}</p>\n                    <p>Humidity: {city.main.humidity}%</p>\n                    <p>Wind speed: {city.wind.speed} km/h</p>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default BigCities;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}